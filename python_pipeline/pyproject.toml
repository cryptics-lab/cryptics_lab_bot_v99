[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python_pipeline"
version = "0.1.0"
description = "CrypticsLab Bot Pipeline"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Proprietary"}
authors = [
    {name = "CrypticsLab", email = "info@crypticslab.example.com"},
]
dependencies = [
    "pydantic>=1.9.0,<2.0.0",
    "fastapi>=0.88.0",
    "uvicorn>=0.20.0",
    "pydantic-avro>=0.1.5",
    "toml>=0.10.2",
    "tomli>=2.0.1",
    "confluent-kafka>=1.9.2",
    "kafka-python>=2.0.2",
    "avro>=1.11.1",
    "fastavro>=1.5.4",
    "requests>=2.28.1",
    "httpx>=0.28.1",
    "attrs>=21.3.0",
    "cachetools>=5.0.0",
    "authlib>=1.0.0",
    "psycopg2-binary>=2.9.5",
    "asyncpg>=0.29.0",
    "aiohttp>=3.8.5",
    "python-dotenv>=0.21.0",
    "uuid>=1.30",  # For UUID generation
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.18.0",
    "ruff>=0.11.0",
    "pytest-cov>=4.1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/python_pipeline"]

[tool.hatch.build.targets.sdist]
include = [
    "src/python_pipeline",
    "tests",
]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "B", "C4", "ARG", "SIM"]
ignore = ["E501"]  # Line length handled by formatter

[tool.ruff.lint.isort]
known-first-party = ["python_pipeline"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=python_pipeline"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]
